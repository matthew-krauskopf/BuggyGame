
Vulnerabilities/Attacks: 
	Standard attack. Low damage on health. Can increase if secret keyword is found.
		If keyword used, multiply damage dealt. Keywords are randomized each game
	Examine files outside of destined folder - no input sanitization. Check folder level
		Used to find keywords, history of player actions
		Private:
			Keywords for targeted attack
			Password?
		Public:
			Log of personal actions
			Energy remaining

	Denial of Service
		Overload opponent server with requests: prevent them from doing anything for x turns.
		Implement with buffer requests. User and enemy keep same queue. Send even number requests, which blocks victim from acting
		Patch by ensuring only one request can be accepted from each player at a time
	Privledge abuse?
		Each system loaded with script that would abuse user privledges. Attacker would modify privledges
			so that user cannot read file they own. Would require resources to fix issue.
		Could disable various options or obscure data user has. Could enable attacker to do new tactics.
		Patch by checking request ID of chmod request. Only accept if user

Design
	Game with 2 players. 
	X amount of health. Game ends when 1 player's health hits 0
	Y resources/energy count. Spend energy to attack or patch vulnerabilites
		Add way to increase resources gained?
	Turn based
	Resources increase after each turn
	Certain actions require different amounts of resources
	Log will give vague details. Must use vulnerability to find out more
	Player must know how to exploit vulnerability. GUI will not inherently show it.
		- Patches prevent said exploits
	Cannot reasonably win without exploting
	Add additional ways to attack if known bugs are fixed?
	Processes must communicate. When waiting for turn, listen for action taken by foe
	Place checks to make sure status of each game is same. Throw error if deviates.

Flow of game
	Either host game or join game. This decides turn order
	Host (P1) goes first. P1 picks action. Action occurs. P2 goes second. P2 picks action. Repeat
		Actions: Attack, Improve
		Attack	
			Standard: Report damage dealt
			Denial of Service: Victim cannot act on next turn. Loses resources.
			Examine files: Victim gets report of data breach
			Execute shell for surrender: Attacker wins
			If attack is patched, resources spent in vain
		Improve
			Opponent can't tell if improving or waiting
			Patch vulnerability (DoS, sanitize, ACE attack)
			Fix privledge exploited
			Increase resources gained each turn (multiple times for any effect)

Goals: 
	Define layout
	Set up GUI
	Implement Basic Attack
	Create turn Flow
	Implement Attacks

How to do DoS
	Request overload: Attacker sends more than one request at a time.
	Game needs to have a buffer system for requests that unloads as soon as messaged done being spent
	Game needs to operate that once buffer has request, execute it. Whoseever turn it is does not matter
	DoS would insert a "skip turn" function. Would cost whatever energy gain player would have received